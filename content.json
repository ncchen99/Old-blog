{"meta":{"title":"黏誠","subtitle":"Hi囉","description":"小瓜呆","author":"黏誠","url":"http://ncchen99.github.io","root":"/"},"pages":[{"title":"蛤? 偶不會用😅","date":"2018-09-30T09:25:30.000Z","updated":"2020-01-07T18:01:23.920Z","comments":true,"path":"categories/index.html","permalink":"http://ncchen99.github.io/categories/index.html","excerpt":"","text":"categories document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"偶是念誠","date":"2020-01-06T09:25:30.000Z","updated":"2020-01-07T17:26:21.140Z","comments":true,"path":"about/index.html","permalink":"http://ncchen99.github.io/about/index.html","excerpt":"","text":"偶超乖的😋 Hi囉!偶是文華高中的二黏級小捧油，有逮幾口以到208找偶🤗 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"Tags","date":"2018-09-30T10:23:38.000Z","updated":"2020-01-07T18:02:27.569Z","comments":true,"path":"tags/index.html","permalink":"http://ncchen99.github.io/tags/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"404","date":"2019-07-19T08:41:10.000Z","updated":"2020-01-07T16:45:47.445Z","comments":true,"path":"404.html","permalink":"http://ncchen99.github.io/404.html","excerpt":"","text":""}],"posts":[{"title":"簡易Dijkstra","slug":"簡易Dijkstra","date":"2020-04-07T18:55:23.000Z","updated":"2020-04-07T19:11:39.091Z","comments":true,"path":"2020/04/08/jian-yi-dijkstra/","link":"","permalink":"http://ncchen99.github.io/2020/04/08/jian-yi-dijkstra/","excerpt":"","text":"Dijkstra Note 以走迷宮圖的最短路徑為例 :hamster:https://zerojudge.tw/ShowProblem?problemid=d793 在hackmdㄉ： https://hackmd.io/@UltraGeek/Sy6vIEqvI #include &lt;bits/stdc++.h> using namespace std; typedef struct Node { int i; int j; int dis; bool operator&lt;(const Node&amp; a) const { return a.dis &lt; dis; } } node; int ta, N, M; // taskAmount int maze[1000][1000]; int dis[1000][1000]; bool flag[1000][1000]; int mv[4][2] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}}; priority_queue&lt;node> dispq; void dijsktra() { while (!dispq.empty()) { flag[dispq.top().i][dispq.top().j] = true; for (int k = 0; k &lt; 4; k++) { node nn; //nextNode nn.i = dispq.top().i + mv[k][0]; nn.j = dispq.top().j + mv[k][1]; nn.dis = dis[nn.i][nn.j]; if ((nn.i &lt; N &amp;&amp; nn.i >= 0) &amp;&amp; (nn.j &lt; M &amp;&amp; nn.j >= 0) &amp;&amp; (!flag[nn.i][nn.j])) { if (dispq.top().dis + maze[nn.i][nn.j] &lt; nn.dis) { nn.dis = dispq.top().dis + maze[nn.i][nn.j]; dispq.push(nn); dis[nn.i][nn.j] = nn.dis; } } } dispq.pop(); } } int main() { ios_base::sync_with_stdio(0); cin.tie(nullptr); cin >> ta; while (ta--) { //int p[1000][1000]; cin >> N >> M; for (int i = 0; i &lt; N; i++) { for (int j = 0; j &lt; M; j++) { cin >> maze[i][j]; flag[i][j] = 0; dis[i][j] = 9999999; } } node n = {0, 0, maze[0][0]}; dis[0][0] = maze[0][0]; dispq.push(n); dijsktra(); cout &lt;&lt; dis[N - 1][M - 1] &lt;&lt; '\\n'; } } 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 INF INF INF 7 INF INF INF INF INF INF INF INF INF INF INF INF INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (0 , 1) ，距離： 3 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 INF INF 7 6 INF INF INF INF INF INF INF INF INF INF INF INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (0 , 2) ，距離： 4 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 INF 7 6 8 INF INF INF INF INF INF INF INF INF INF INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (1 , 1) ，距離： 6 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 INF 7 6 8 INF INF INF 13 INF INF INF INF INF INF INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (0 , 3) ，距離： 6 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 INF INF 13 INF INF INF INF INF INF INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (1 , 0) ，距離： 7 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 INF 8 13 INF INF INF INF INF INF INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (2 , 0) ，距離： 8 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 INF 8 13 INF INF INF 10 INF INF INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (1 , 2) ，距離： 8 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 INF 8 13 13 INF INF 10 INF INF INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (3 , 0) ，距離： 10 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 INF 8 13 13 INF INF 10 13 INF INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (2 , 2) ，距離： 13 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 INF 8 13 13 18 INF 10 13 17 INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (3 , 1) ，距離： 13 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 INF 8 13 13 18 INF 10 13 17 INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (2 , 1) ，距離： 13 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 INF 8 13 13 18 INF 10 13 17 INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (1 , 3) ，距離： 15 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 24 8 13 13 18 INF 10 13 17 INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (0 , 4) ，距離： 15 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 24 8 13 13 18 INF 10 13 17 INF INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (3 , 2) ，距離： 17 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 24 8 13 13 18 INF 10 13 17 19 INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (2 , 3) ，距離： 18 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 24 8 13 13 18 21 10 13 17 19 INF 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (3 , 3) ，距離： 19 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 24 8 13 13 18 21 10 13 17 19 24 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (2 , 4) ，距離： 21 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 24 8 13 13 18 21 10 13 17 19 24 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (3 , 4) ，距離： 24 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 24 8 13 13 18 21 10 13 17 19 24 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (1 , 4) ，距離： 24 0 3 1 2 9 7 3 4 9 9 1 7 5 5 3 2 3 4 2 5 0 3 4 6 15 7 6 8 15 24 8 13 13 18 21 10 13 17 19 24 透過綠色這格更新旁邊的紅色格ㄉ最短路徑，再從所有格子中挑選未走過且路徑最短者繼續尋找 ，即格子： (1 , 4) ，距離： 24 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[{"name":"algorithm","slug":"algorithm","permalink":"http://ncchen99.github.io/tags/algorithm/"}]},{"title":"KDEneon換主題","slug":"KDEneon換主題","date":"2020-03-18T16:42:01.000Z","updated":"2020-03-18T16:54:23.022Z","comments":true,"path":"2020/03/19/kdeneon-huan-zhu-ti/","link":"","permalink":"http://ncchen99.github.io/2020/03/19/kdeneon-huan-zhu-ti/","excerpt":"","text":"KDE neon 換主題前幾天聽到一首歌，覺得hen讚 😺是ODESZA的La Ciudad 🐻 後來發現他們的 🎵 都超讚ㄉ，還有自己的 appㄟ 🍍 ，聽惹之後覺得又有力氣做點事情，所以決定來寫一下使用惹一陣子KDE的心得。 上個月偶跟把拔拿惹一隻比較讚的 💻 ，所以只好全部砍掉重練，重裝惹一次Ubuntu的好朋友，這次偶迷有裝Kubuntu惹 🤓 ，改裝看起來比較專業的 KDE neon ，一來是上回遇到蘇入法怪怪的問題，偶超呆 🍎 不會處理，二來是看看KDE neon好不好玩。 結果一開機就沒有WiFi，偶差點😢出來，試了很久還是試不出來，後來發現是沒有那塊卡卡的驅動，照著這個教學用一用就好了，如果大家有遇到類似的問題也可以參考這篇ㄛ ✌接下來餒偶就開始挑主題到底要用之前的那一個Layan plasma theme 還是另外一個Sweet KDE 餒，後來偶決定用新的臘個🐹 。 給大家看一下偶美美的桌面 :lion_face: 其他要隔膜用之後在補好惹，好想捆捆 😴 。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://ncchen99.github.io/tags/Linux/"}]},{"title":"偶的第一個博客","slug":"偶的第一個博客","date":"2020-01-05T16:52:53.000Z","updated":"2020-03-18T16:45:14.739Z","comments":true,"path":"2020/01/06/ou-de-di-yi-ge-bo-ke/","link":"","permalink":"http://ncchen99.github.io/2020/01/06/ou-de-di-yi-ge-bo-ke/","excerpt":"","text":"Hi囉!偶是文華高中的二黏級小捧油，有逮幾口以到208找偶🤗 hi = \"World\" print(\"Hello\" + hi) document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[{"name":"helloWorld","slug":"helloWorld","permalink":"http://ncchen99.github.io/tags/helloWorld/"}]}]}